// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using OrangeMoviesApp.Persistence.Persistence;

namespace OrangeMoviesApp.Persistence.Migrations
{
    [DbContext(typeof(OrangeMoviesDbContext))]
    [Migration("20230118214938_InitialMigration")]
    partial class InitialMigration
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("OrangeMoviesApp.Domain.Core.Genre", b =>
                {
                    b.Property<int>("GenreId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("GenreId");

                    b.ToTable("Genres");

                    b.HasData(
                        new
                        {
                            GenreId = 28,
                            Name = "Action"
                        },
                        new
                        {
                            GenreId = 12,
                            Name = "Adventure"
                        },
                        new
                        {
                            GenreId = 16,
                            Name = "Animation"
                        },
                        new
                        {
                            GenreId = 35,
                            Name = "Comedy"
                        },
                        new
                        {
                            GenreId = 80,
                            Name = "Crime"
                        },
                        new
                        {
                            GenreId = 99,
                            Name = "Documentary"
                        },
                        new
                        {
                            GenreId = 18,
                            Name = "Drama"
                        },
                        new
                        {
                            GenreId = 10751,
                            Name = "Family"
                        },
                        new
                        {
                            GenreId = 14,
                            Name = "Fantasy"
                        },
                        new
                        {
                            GenreId = 36,
                            Name = "History"
                        },
                        new
                        {
                            GenreId = 27,
                            Name = "Horror"
                        },
                        new
                        {
                            GenreId = 10402,
                            Name = "Music"
                        },
                        new
                        {
                            GenreId = 9648,
                            Name = "Mystery"
                        },
                        new
                        {
                            GenreId = 10749,
                            Name = "Romance"
                        },
                        new
                        {
                            GenreId = 878,
                            Name = "Science Fiction"
                        },
                        new
                        {
                            GenreId = 10770,
                            Name = "TV Movie"
                        },
                        new
                        {
                            GenreId = 53,
                            Name = "Thriller"
                        },
                        new
                        {
                            GenreId = 10752,
                            Name = "War"
                        },
                        new
                        {
                            GenreId = 37,
                            Name = "Western"
                        });
                });

            modelBuilder.Entity("OrangeMoviesApp.Domain.Core.Movie", b =>
                {
                    b.Property<int>("MovieId")
                        .HasColumnType("int");

                    b.Property<string>("Overview")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PosterPath")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ReleaseDate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.Property<float>("VoteAverage")
                        .HasColumnType("real");

                    b.HasKey("MovieId");

                    b.ToTable("Movies");
                });

            modelBuilder.Entity("OrangeMoviesApp.Domain.Core.MovieGenre", b =>
                {
                    b.Property<int>("MovieId")
                        .HasColumnType("int");

                    b.Property<int>("GenreId")
                        .HasColumnType("int");

                    b.HasKey("MovieId", "GenreId");

                    b.HasIndex("GenreId");

                    b.ToTable("MovieGenres");
                });

            modelBuilder.Entity("OrangeMoviesApp.Domain.Core.MovieGenre", b =>
                {
                    b.HasOne("OrangeMoviesApp.Domain.Core.Genre", "Genre")
                        .WithMany("MovieGenres")
                        .HasForeignKey("GenreId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("OrangeMoviesApp.Domain.Core.Movie", "Movie")
                        .WithMany("MovieGenres")
                        .HasForeignKey("MovieId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
